from unittest import TestCase
from hypyxel import Api

from datetime import datetime


class ResourcesQuests(TestCase):

    @classmethod
    def setUpClass(cls) -> None:
        cls.a = Api('http://localhost:8000')

    def test_resources_quests(self):
        c = self.a.resources.quests

        self.assertTrue(
            c.last_update == datetime(2020, 10, 21, 11, 10, 58, 771000),
            'Datetime invalid'
        )

        self.assertTrue(len(c.quests) == 120,
                        'Unexpected number of quests')

        d = (
            ('quake_daily_play', 'Daily Quest: Quake Player', 'quake'),
            ('quake_daily_kill', 'Daily Quest: Sniper', 'quake'),
            ('quake_daily_win', 'Daily Quest: Winner', 'quake'),
            ('quake_weekly_play', 'Weekly Quest: Bazinga!', 'quake'),
            ('walls_daily_play', 'Daily Quest: Waller', 'walls'),
            ('walls_daily_kill', 'Daily Quest: Kills', 'walls'),
            ('walls_daily_win', 'Daily Quest: Win', 'walls'),
            ('walls_weekly', 'Weekly Quest: Walls Weekly', 'walls'),
            ('paintballer', 'Daily Quest: Paintballer', 'paintball'),
            ('paintball_killer', 'Daily Quest: Paintball Killer', 'paintball'),
            ('paintball_expert', 'Weekly Quest: Paintball Expert', 'paintball'),
            ('blitz_game_of_the_day', 'Daily Quest: Game of the Day', 'hungergames'),
            ('blitz_win', 'Daily Quest: Win Normal', 'hungergames'),
            ('blitz_loot_chest_daily', 'Daily Quest: Chest Looter', 'hungergames'),
            ('blitz_kills', 'Daily Quest: Kills', 'hungergames'),
            ('blitz_weekly_master', 'Weekly Quest: Blitz Master', 'hungergames'),
            ('blitz_loot_chest_weekly', 'Weekly Quest: Blitz Expert', 'hungergames'),
            ('tnt_daily_win', 'Daily Quest: TNT Winner', 'tntgames'),
            ('tnt_weekly_play', 'Weekly Quest: Explosive Fanatic', 'tntgames'),
            ('tnt_tntrun_daily', 'Daily Quest: TNT Run', 'tntgames'),
            ('tnt_tntrun_weekly', 'Weekly Quest: TNT Run', 'tntgames'),
            ('tnt_pvprun_daily', 'Daily Quest: PVP Run', 'tntgames'),
            ('tnt_pvprun_weekly', 'Weekly Quest: PVP Run', 'tntgames'),
            ('tnt_bowspleef_daily', 'Daily Quest: Bow Spleef', 'tntgames'),
            ('tnt_bowspleef_weekly', 'Weekly Quest: Bow Spleef', 'tntgames'),
            ('tnt_tnttag_daily', 'Daily Quest: TNT Tag', 'tntgames'),
            ('tnt_tnttag_weekly', 'Weekly Quest: TNT Tag', 'tntgames'),
            ('tnt_wizards_daily', 'Daily Quest: TNT Wizards', 'tntgames'),
            ('tnt_wizards_weekly', 'Weekly Quest: TNT Wizards', 'tntgames'),
            ('vampirez_daily_play', 'Daily Quest: VampireZ', 'vampirez'),
            ('vampirez_daily_kill', 'Daily Quest: Blood Drinker', 'vampirez'),
            ('vampirez_daily_human_kill', 'Daily Quest: Human Killer', 'vampirez'),
            ('vampirez_daily_win', 'Daily Quest: VampireZ Daily Win', 'vampirez'),
            ('vampirez_weekly_win', 'Weekly Quest: Vampire Winner', 'vampirez'),
            ('vampirez_weekly_kill', 'Weekly Quest: Vampire Slayer', 'vampirez'),
            ('vampirez_weekly_human_kill', 'Weekly Quest: Human Slayer', 'vampirez'),
            ('mega_walls_play', 'Daily Quest: Game of the Day', 'walls3'),
            ('mega_walls_win', 'Daily Quest: Win', 'walls3'),
            ('mega_walls_kill', 'Daily Quest: Kills', 'walls3'),
            ('mega_walls_weekly', 'Weekly Quest: Mega Waller', 'walls3'),
            ('mega_walls_faithful', 'Mythic Quest: Faithful', 'walls3'),
            ('arcade_gamer', 'Daily Quest: Arcade Gamer', 'arcade'),
            ('arcade_winner', 'Daily Quest: Arcade Winner', 'arcade'),
            ('arcade_specialist', 'Weekly Quest: Arcade Specialist', 'arcade'),
            ('arena_daily_play', 'Daily Quest: Play Arena', 'arena'),
            ('arena_daily_kills', 'Daily Quest: Arena Kills', 'arena'),
            ('arena_daily_wins', 'Daily Quest: Arena Wins', 'arena'),
            ('arena_weekly_play', 'Weekly Quest: Play Arena', 'arena'),
            ('uhc_team', 'Daily Quest: Team UHC Champions', 'uhc'),
            ('uhc_solo', 'Daily Quest: Solo UHC Champions', 'uhc'),
            ('uhc_dm', 'Daily Quest: UHC Deathmatch', 'uhc'),
            ('uhc_weekly', 'Weekly Quest: UHC Champions', 'uhc'),
            ('solo_brawler', 'Daily Quest: Solo Speed Brawler', 'uhc'),
            ('team_brawler', 'Daily Quest: Team Speed Brawler', 'uhc'),
            ('uhc_madness', 'Weekly Quest: SpeedUHC Madness', 'uhc'),
            ('cvc_win_daily_normal', 'Daily Quest: Win a game! (Defusal)', 'mcgo'),
            ('cvc_kill_daily_normal', 'Daily Quest: Kill 15 players! (Defusal)', 'mcgo'),
            ('cvc_kill', 'Daily Quest: Get 300 points! (Deathmatch)', 'mcgo'),
            ('cvc_win_daily_deathmatch', 'Daily Quest: Win a game! (Deathmatch)', 'mcgo'),
            ('cvc_kill_weekly', 'Weekly Quest: 100 kills and 1,500 points', 'mcgo'),
            ('warlords_ctf', 'Daily Quest: Capture the Flag', 'battleground'),
            ('warlords_tdm', 'Daily Quest: Team Deathmatch', 'battleground'),
            ('warlords_domination', 'Daily Quest: Domination', 'battleground'),
            ('warlords_victorious', 'Daily Quest: Victorious', 'battleground'),
            ('warlords_objectives', 'Daily Quest: Carry, Secured!', 'battleground'),
            ('warlords_dedication', 'Weekly Quest: Dedication', 'battleground'),
            ('warlords_all_star', 'Weekly Quest: All Star', 'battleground'),
            ('supersmash_solo_win', 'Daily Quest: Smash Heroes Solo Win', 'supersmash'),
            ('supersmash_solo_kills', 'Daily Quest: Smash Heroes Solo Kills', 'supersmash'),
            ('supersmash_team_win', 'Daily Quest: Smash Heroes Team Win', 'supersmash'),
            ('supersmash_team_kills', 'Daily Quest: Smash Heroes Team Kills', 'supersmash'),
            ('supersmash_weekly_kills', 'Weekly Quest: Smash Heroes Weekly Kills', 'supersmash'),
            ('gingerbread_bling_bling', 'Daily Quest: Bling Bling', 'gingerbread'),
            ('gingerbread_maps', 'Daily Quest: International Championship', 'gingerbread'),
            ('gingerbread_racer', 'Daily Quest: Racer', 'gingerbread'),
            ('gingerbread_mastery', 'Weekly Quest: Turbo Kart Racers', 'gingerbread'),
            ('skywars_solo_win', 'Daily Quest: Skywars Solo Win', 'skywars'),
            ('skywars_solo_kills', 'Daily Quest: Skywars Solo Kills', 'skywars'),
            ('skywars_team_win', 'Daily Quest: Skywars Doubles Win', 'skywars'),
            ('skywars_team_kills', 'Daily Quest: Skywars Doubles Kills', 'skywars'),
            ('skywars_arcade_win', 'Daily Quest: Skywars Lab Win', 'skywars'),
            ('skywars_corrupt_win', 'Daily Quest: Skywars Corrupted Win', 'skywars'),
            ('skywars_weekly_kills', 'Weekly Quest: Skywars Weekly Kills', 'skywars'),
            ('skywars_weekly_arcade_win_all', 'Weekly Quest: Skywars Scientist', 'skywars'),
            ('skywars_daily_tokens', 'Daily Quest: Tokens!', 'skywars'),
            ('skywars_weekly_free_loot_chest', 'Weekly Quest: Free Loot Chest', 'skywars'),
            ('skywars_halloween_harvest_2020', 'Special Quest: Harvest Season', 'skywars'),
            ('crazy_walls_daily_play', 'Daily Quest: Crazy Games', 'truecombat'),
            ('crazy_walls_daily_kill', 'Daily Quest: Kills', 'truecombat'),
            ('crazy_walls_daily_win', 'Daily Quest: Win', 'truecombat'),
            ('crazy_walls_weekly', 'Weekly Quest: Crazy Walls Weekly', 'truecombat'),
            ('skyclash_play_games', 'Daily Quest: SkyClash Playtime', 'skyclash'),
            ('skyclash_kills', 'Daily Quest: SkyClash Kills', 'skyclash'),
            ('skyclash_play_points', 'Daily Quest: SkyClash Play Points', 'skyclash'),
            ('skyclash_void', 'Daily Quest: SkyClash Void', 'skyclash'),
            ('skyclash_weekly_kills', 'Weekly Quest: SkyClash Weekly Kills', 'skyclash'),
            ('prototype_pit_daily_kills', 'Daily Quest: Hunter', 'prototype'),
            ('prototype_pit_daily_contract', 'Daily Quest: Contracted', 'prototype'),
            ('prototype_pit_weekly_gold', 'Weekly Quest: Double Up', 'prototype'),
            ('bedwars_daily_win', 'Daily Quest: First Win of the Day', 'bedwars'),
            ('bedwars_daily_one_more', 'Daily Quest: One More Game!', 'bedwars'),
            ('bedwars_weekly_bed_elims', 'Weekly: Bed Removal Co.', 'bedwars'),
            ('bedwars_weekly_dream_win', 'Weekly Quest: Sleep Tight.', 'bedwars'),
            ('bedwars_daily_nightmares', 'Special Daily: Nightmares', 'bedwars'),
            ('bedwars_weekly_pumpkinator', 'Special Weekly: Pumpkinator', 'bedwars'),
            ('mm_daily_win', 'Daily Quest: Winner', 'murdermystery'),
            ('mm_daily_power_play', 'Daily Quest: Power Play', 'murdermystery'),
            ('mm_daily_target_kill', 'Daily Quest: Hitman', 'murdermystery'),
            ('mm_weekly_murderer_kills', 'Weekly Quest: Professional', 'murdermystery'),
            ('mm_weekly_wins', 'Weekly Quest: Big Winner', 'murdermystery'),
            ('mm_special_weekly_killer_instinct_2020', 'Special Quest: Killer Instinct', 'murdermystery'),
            ('build_battle_player', 'Daily Quest: Build Battle Player', 'buildbattle'),
            ('build_battle_winner', 'Daily Quest: Build Battle Winner', 'buildbattle'),
            ('build_battle_weekly', 'Weekly Quest: Master Architect', 'buildbattle'),
            ('build_battle_halloween', 'Special Daily: Hyper', 'buildbattle'),
            ('duels_player', 'Daily Quest: Duels Player', 'duels'),
            ('duels_killer', 'Daily Quest: Duels Killer', 'duels'),
            ('duels_winner', 'Daily Quest: Duels Winner', 'duels'),
            ('duels_weekly_kills', 'Weekly Quest: Duels Weekly Kills', 'duels'),
            ('duels_weekly_wins', 'Weekly Quest: Duels Weekly Wins', 'duels'),
        )

        v = tuple((i.id, i.name, i.game) for i in c.quests)

        self.assertTrue(v == d, 'Unexpected Quests list')
